@model Runbow.TWS.Web.Areas.POD.Models.PodStatusTrackManageViewModel
@using Runbow.TWS.Common;

@{
    var ColumnCollection = Model.Config.ColumnCollection.Where(c => (c.IsKey && !c.IsHide) || (!c.IsKey && !c.IsHide) || (!c.IsKey && c.IsHide && c.InnerColumns.Any(innerc => innerc.CustomerID == Model.CustomerID)))
        .Select(c =>
        {
            if (c.InnerColumns.Count == 0)
            {
                return c;
            }
            else
            {
                if (c.InnerColumns.Any(innerc => innerc.CustomerID == Model.CustomerID))
                {
                    return c.InnerColumns.First(innerc => innerc.CustomerID == Model.CustomerID);
                }

                return c;
            }
        });
}

<fieldset>
    <legend>提示</legend>
     <span>1. 运单状态，跟踪状态，时间字段不能为空
            <br />
            2. 运单状态只能填写 提货/干线/配送 
            <br />
            3. 跟踪状态只能填写 订单下达/提货调车/到车情况/装车情况/离开情况/到达HUB/干线配载/干线发车/干线跟踪/到达终端/配送调车/配送跟踪/运单签收/回单上传
        </span>
</fieldset>
<fieldset>
    <legend>状态跟踪</legend>
    <table id="PodStatusTrackTable">
        <thead>
            <tr>
                @foreach (var column in ColumnCollection.OrderBy(t => t.Order))
                {
                    if (column.IsHide)
                    {
                    <th style="display: none">
                        @column.DisplayName
                    </th>
                    }
                    else
                    {
                    <th>
                        @column.DisplayName
                    </th>
                    }
                }
                <th style="align-content: center">删除
                </th>
            </tr>
        </thead>
        <tbody>
            @if (Model.PodStatusTracks != null)
            {
                foreach (var row in Model.PodStatusTracks)
                {
                <tr>
                    @foreach (var column in ColumnCollection.OrderBy(t => t.Order))
                    {
                        object o = typeof(Runbow.TWS.Entity.PodStatusTrack).GetProperty(column.DbColumnName).GetValue(row);
                        if (column.IsHide)
                        {
                        <td style="display: none">
                            @if (o != null)
                            {
                                @o.ToString()
                            }
                        </td>
                        }
                        else
                        {
                        <td>
                            @if (o != null)
                            {
                                if (string.Equals(column.Type, "DateTime", StringComparison.OrdinalIgnoreCase))
                                {
                                    var time = (DateTime?)o;
                                    if (time != null && time.HasValue)
                                    {
                                @time.Value.DateTimeToString()
                                    }
                                }
                                else if (string.Equals(column.Type, "DateTimeWithTime", StringComparison.OrdinalIgnoreCase))
                                {
                                    var time = (DateTime?)o;
                                    if (time != null && time.HasValue)
                                    {
                                @time.Value.ToString("yyyy-MM-dd HH:mm")
                                    }
                                }
                                else if (string.Equals(column.Type, "CheckBox", StringComparison.OrdinalIgnoreCase) || string.Equals(column.Type, "DropDownList", StringComparison.OrdinalIgnoreCase))
                                {
                                @Html.ChooseString(o.ToString() == "1", "Y", "N")
                                }
                                else if (string.Equals(column.Type, "FileUpload", StringComparison.OrdinalIgnoreCase))
                                {
                                @Html.SingleFileUpload("fileAttachmentGroupID" + o.ToString(), "Hidden_AttachmentGroupID" + o.ToString(), o.ToString(), false, true, false, false)
                                }
                                else
                                {
                                @o.ToString()
                                }
                            }
                        </td>
                        }
                    }
                    <td>
                        <a href="#" data-action="Delete" data-id="@row.ID">删除</a>
                    </td>
                </tr>
                }
            }
        </tbody>
    </table>
</fieldset>

@{
    var notKeyColumns = ColumnCollection.Where(c => c.IsKey == false && c.IsHide == false);
    var notKeyTextBoxColumns = notKeyColumns.Where(c => string.Equals(c.Type, "TextBox", StringComparison.OrdinalIgnoreCase) || string.Equals(c.Type, "DateTime", StringComparison.OrdinalIgnoreCase) || string.Equals(c.Type, "DateTimeWithTime", StringComparison.OrdinalIgnoreCase) || string.Equals(c.Type, "CheckBox", StringComparison.OrdinalIgnoreCase) || string.Equals(c.Type, "DropDownList", StringComparison.OrdinalIgnoreCase) || string.Equals(c.Type, "FileUpload", StringComparison.OrdinalIgnoreCase)).OrderBy(c => c.Order).ToList();
    var notKeyTextAreaColumns = notKeyColumns.Where(c => string.Equals(c.Type, "TextArea", StringComparison.OrdinalIgnoreCase)).OrderBy(c => c.Order).ToList();
    var notKeyTextBoxColumnsCount = notKeyTextBoxColumns.Count;
    int notKeyTextBoxRowCount = notKeyTextBoxColumnsCount % 3 > 0 ? notKeyTextBoxColumnsCount / 3 + 1 : notKeyTextBoxColumnsCount / 3;
    int notKeyTextAreaRowCount = notKeyTextAreaColumns.Count;
}

@using (Html.BeginForm())
{
    @Html.HiddenFor(m => m.PodStatusTrack.ID)
    @Html.HiddenFor(m => m.PodStatusTrack.PodID)
    @Html.HiddenFor(m => m.PodStatusTrack.SystemNumber)
    @Html.HiddenFor(m => m.PodStatusTrack.CustomerOrderNumber)
    @Html.HiddenFor(m => m.PodStatusTrack.Creator)
    @Html.HiddenFor(m => m.PodStatusTrack.CreateTime)
    @Html.HiddenFor(m => m.PodStatusTrack.Str1)
    @Html.HiddenFor(m => m.PodStatusTrack.Str2)
    @Html.HiddenFor(m => m.PodStatusTrack.Str3)
    @Html.HiddenFor(m => m.PodStatusTrack.Str4)
    @Html.HiddenFor(m => m.PodStatusTrack.Str5)
    @Html.HiddenFor(m => m.PodStatusTrack.Str6)
    @Html.HiddenFor(m => m.PodStatusTrack.Str7)
    @Html.HiddenFor(m => m.PodStatusTrack.Str8)
    @Html.HiddenFor(m => m.PodStatusTrack.Str9)
    @Html.HiddenFor(m => m.PodStatusTrack.Str10)
    @Html.HiddenFor(m => m.PodStatusTrack.DateTime1)
    @Html.HiddenFor(m => m.PodStatusTrack.DateTime2)
    @Html.HiddenFor(m => m.PodStatusTrack.DateTime3)
    @Html.HiddenFor(m => m.CustomerID)
    @Html.HiddenFor(m => m.IsOuterUser)
    <script>
        var podID = '@Model.PodStatusTrack.PodID';
    </script>
    <fieldset>
        <legend>新增状态跟踪</legend>
        <table>
            @for (int i = 0; i < notKeyTextBoxRowCount; i++)
            {
                <tr>
                    @for (int j = 0; j < 3; j++)
                    {
                        var index = i * 3 + j;
                        if (index >= notKeyTextBoxColumnsCount)
                        {
                        <td colspan="2"></td>
                        }
                        else
                        {
                            var column = notKeyTextBoxColumns[i * 3 + j];
                        <td class="TableColumnTitle">
                            @Html.Label("lbl" + column.DbColumnName, column.DisplayName)
                        </td>
                        <td>
                            @{
                            switch (column.Type)
                            {
                                case "TextBox":
                                @Html.TextBox(column.DbColumnName, null, new { @class = "notKeyVal" });
                                                                                                      break;
                                case "DateTime":
                                @Html.Calendar(column.DbColumnName, "notKeyVal");
                                                                                break;
                                case "DateTimeWithTime":
                                @Html.CalendarDateTime(column.DbColumnName, "notKeyVal");
                                                                                break;
                                case "CheckBox":
                                @Html.CheckBox(column.DbColumnName, new { @class = "notKeyVal" });
                                                                                                 break;
                                case "DropDownList":
                                @Html.DropDownList(column.DbColumnName, Model.TrueOrFalse, new { @class = "notKeyVal", type = "DropDownList" });
                                                                                                                                               break;
                                case "FileUpload":
                                @Html.SingleFileUpload("FileUpload" + column.DbColumnName, column.DbColumnName, typeof(Runbow.TWS.Entity.PodStatusTrack).GetProperty(column.DbColumnName).GetValue(Model.PodStatusTrack).ToString(), false,true,false,true);
                                                                                                                                                                                                                                                       break;
                                default:
                                                                                                                                               break;
                            }
                            }
                        </td>
                        }
                    }
                </tr>
            }
            @for (int i = 0; i < notKeyTextAreaRowCount; i++)
            {
                <tr>
                    <td class="TableColumnTitle">
                        @Html.Label("lbl" + notKeyTextAreaColumns[i].DbColumnName, notKeyTextAreaColumns[i].DisplayName)
                    </td>
                    <td colspan="5">
                        @Html.TextArea(notKeyTextAreaColumns[i].DbColumnName, new { style = "width:95%", @class = "notKeyVal" })
                    </td>
                </tr>
            }
        </table>

        <div class="actionButtonDiv">
            <input type="submit" value="提交" id="submitButton" />
            &nbsp;&nbsp;&nbsp;&nbsp;
            <input type="button" value="返回" id="returnButton" />
        </div>
    </fieldset>
}